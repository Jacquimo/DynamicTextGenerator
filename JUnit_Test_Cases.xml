<?xml version="1.0"?>
<?mso-application progid="Excel.Sheet"?>
<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:o="urn:schemas-microsoft-com:office:office"
 xmlns:x="urn:schemas-microsoft-com:office:excel"
 xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:c="urn:schemas-microsoft-com:office:component:spreadsheet"
 xmlns:html="http://www.w3.org/TR/REC-html40"
 xmlns:x2="http://schemas.microsoft.com/office/excel/2003/xml"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <DocumentProperties xmlns="urn:schemas-microsoft-com:office:office">
  <Version>14.00</Version>
 </DocumentProperties>
 <OfficeDocumentSettings xmlns="urn:schemas-microsoft-com:office:office">
  <Colors>
   <Color>
    <Index>3</Index>
    <RGB>#99FF66</RGB>
   </Color>
   <Color>
    <Index>4</Index>
    <RGB>#C0C0C0</RGB>
   </Color>
   <Color>
    <Index>5</Index>
    <RGB>#FF0000</RGB>
   </Color>
   <Color>
    <Index>6</Index>
    <RGB>#FF3333</RGB>
   </Color>
   <Color>
    <Index>7</Index>
    <RGB>#FFFF99</RGB>
   </Color>
  </Colors>
 </OfficeDocumentSettings>
 <ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel">
  <WindowHeight>9000</WindowHeight>
  <WindowWidth>13860</WindowWidth>
  <WindowTopX>240</WindowTopX>
  <WindowTopY>75</WindowTopY>
  <ProtectStructure>False</ProtectStructure>
  <ProtectWindows>False</ProtectWindows>
 </ExcelWorkbook>
 <Styles>
  <Style ss:ID="Default" ss:Name="Normal">
   <Alignment ss:Vertical="Bottom"/>
   <Borders/>
   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="11" ss:Color="#000000"/>
   <Interior/>
   <NumberFormat/>
   <Protection/>
  </Style>
  <Style ss:ID="s62" ss:Name="Default">
  </Style>
  <Style ss:ID="s68" ss:Parent="s62">
   <Interior ss:Color="#FFFF99" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s69" ss:Parent="s62">
   <Interior ss:Color="#FF3333" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s70" ss:Parent="s62">
   <Interior ss:Color="#99FF66" ss:Pattern="Solid"/>
  </Style>
 </Styles>
 <Worksheet ss:Name="Sheet1">
  <Table ss:ExpandedColumnCount="7" ss:ExpandedRowCount="20" x:FullColumns="1"
   x:FullRows="1" ss:StyleID="s62" ss:DefaultRowHeight="15">
   <Column ss:StyleID="s62" ss:Width="246.75"/>
   <Column ss:StyleID="s62" ss:Width="242.25"/>
   <Column ss:StyleID="s62" ss:Width="287.25"/>
   <Column ss:StyleID="s62" ss:Width="143.25"/>
   <Column ss:StyleID="s62" ss:Width="136.5"/>
   <Column ss:StyleID="s62" ss:Width="138"/>
   <Column ss:StyleID="s62" ss:Width="174"/>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell ss:StyleID="s68"><Data ss:Type="String">PrefixGenerator (Weight: 60%)</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell><Data ss:Type="String">trainPrefixMap(StringArrayMap map, String fileName)</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="12.75"/>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell ss:StyleID="s68"><Data ss:Type="String">Prefix (Weight: 10%)</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="23.8125">
    <Cell><Data ss:Type="String">initializeSentenceStartArray()</Data></Cell>
    <Cell ss:StyleID="s69"><Data ss:Type="String">Test via GetStartOfSentenceStartPrefixes()</Data></Cell>
    <Cell><Data ss:Type="String">←&#45;-Still have erratic behavior. MotionTo remove this test case.</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="35.0625">
    <Cell><Data ss:Type="String">getStartOfSentencePrefixes()</Data></Cell>
    <Cell><Data ss:Type="String">check if hardcoded array is equal  to returned array (covered in  TestInitializeSentenceStartArray)</Data></Cell>
    <Cell ss:StyleID="s70"><Data ss:Type="String">check if the returned array is null</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="23.8125">
    <Cell><Data ss:Type="String">Prefix(String [] prefixStrings)</Data></Cell>
    <Cell><Data ss:Type="String">Checks to make sure the prefix array is setCorrectly</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell><Data ss:Type="String">getNumSuffixes()</Data></Cell>
    <Cell><Data ss:Type="String">Test via addSuffix</Data></Cell>
    <Cell ss:StyleID="s70"><Data ss:Type="String">check if initial # of suffixes is 0</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="23.8125">
    <Cell><Data ss:Type="String">getNumPrefixes()</Data></Cell>
    <Cell><Data ss:Type="String">Check array length after constructor Is called with different input</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="23.8125">
    <Cell><Data ss:Type="String">getPrefixString(int index)</Data></Cell>
    <Cell><Data ss:Type="String">Test if prefix returned at index, “index” Matches our hard coded String</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell><Data ss:Type="String">addSuffix(String str)</Data></Cell>
    <Cell><Data ss:Type="String">Test via getNumSuffixes()</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell><Data ss:Type="String">String getRandomSuffix()</Data></Cell>
    <Cell><Data ss:Type="String">Test via getSuffixString()</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell><Data ss:Type="String">equals(Object obj)</Data></Cell>
    <Cell><Data ss:Type="String">Test boolean value of same object</Data></Cell>
    <Cell ss:StyleID="s70"><Data ss:Type="String">Test boolean value of different object</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell><Data ss:Type="String">toString()</Data></Cell>
    <Cell><Data ss:Type="String">String comparison with our hardcoded prefixes</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell><Data ss:Type="String">getSuffixString(int index)</Data></Cell>
    <Cell><Data ss:Type="String">Test if suffix returned at index matches ours</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="12.75"/>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell ss:StyleID="s68"><Data ss:Type="String">TextGenerationEngine (Weight: 30%)</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell><Data ss:Type="String">shouldTerminate(String suffix)</Data></Cell>
    <Cell ss:StyleID="s70"><Data ss:Type="String">Look for terminating character at end of sent</Data></Cell>
    <Cell ss:StyleID="s70"><Data ss:Type="String">Has terminating char in beginning/middle (fail)</Data></Cell>
    <Cell ss:StyleID="s70"><Data ss:Type="String">No terminating character at all</Data></Cell>
    <Cell ss:StyleID="s70"><Data ss:Type="String">Punc before terminator (true)</Data></Cell>
    <Cell ss:StyleID="s70"><Data ss:Type="String">Punc w/out terminator (false)</Data></Cell>
    <Cell ss:StyleID="s70"><Data ss:Type="String">Punc as non-fina char (ie. It's) (false)</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="12.75">
    <Cell><Data ss:Type="String">generateSentence()</Data></Cell>
    <Cell ss:StyleID="s70"><Data ss:Type="String">Test for formatting the output</Data></Cell>
    <Cell><Data ss:Type="String">Validity check (given prefix, is next word valid suffix)</Data></Cell>
   </Row>
   <Row ss:AutoFitHeight="0" ss:Height="35.0625">
    <Cell><Data ss:Type="String">reTraining (*name is subject to change)</Data></Cell>
    <Cell><Data ss:Type="String">Change start of sentence prefix</Data></Cell>
    <Cell><Data ss:Type="String">Goes through all keys in hashmap and prefix length is same as specified and checks if their length is the same As preset length</Data></Cell>
    <Cell><Data ss:Type="String">Comparison to length</Data></Cell>
   </Row>
  </Table>
  <WorksheetOptions xmlns="urn:schemas-microsoft-com:office:excel">
   <Selected/>
   <TopRowVisible>3</TopRowVisible>
   <Panes>
    <Pane>
     <Number>3</Number>
     <ActiveRow>12</ActiveRow>
     <ActiveCol>1</ActiveCol>
    </Pane>
   </Panes>
   <ProtectObjects>False</ProtectObjects>
   <ProtectScenarios>False</ProtectScenarios>
  </WorksheetOptions>
  <x:WorksheetOptions/>
 </Worksheet>
</Workbook>
