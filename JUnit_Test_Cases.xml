<?xml version="1.0" encoding="UTF-8"?>
<?mso-application progid="Excel.Sheet"?><Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:c="urn:schemas-microsoft-com:office:component:spreadsheet" xmlns:html="http://www.w3.org/TR/REC-html40" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" xmlns:x2="http://schemas.microsoft.com/office/excel/2003/xml" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><OfficeDocumentSettings xmlns="urn:schemas-microsoft-com:office:office"><Colors><Color><Index>3</Index><RGB>#99ff66</RGB></Color><Color><Index>4</Index><RGB>#c0c0c0</RGB></Color><Color><Index>5</Index><RGB>#ff0000</RGB></Color><Color><Index>6</Index><RGB>#ff3333</RGB></Color><Color><Index>7</Index><RGB>#ffff99</RGB></Color></Colors></OfficeDocumentSettings><ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel"><WindowHeight>9000</WindowHeight><WindowWidth>13860</WindowWidth><WindowTopX>240</WindowTopX><WindowTopY>75</WindowTopY><ProtectStructure>False</ProtectStructure><ProtectWindows>False</ProtectWindows></ExcelWorkbook><Styles><Style ss:ID="Default" ss:Name="Default"/><Style ss:ID="Result" ss:Name="Result"><Font ss:Bold="1" ss:Italic="1" ss:Size="10" ss:Underline="Single"/></Style><Style ss:ID="Result2" ss:Name="Result2"><Font ss:Bold="1" ss:Italic="1" ss:Size="10" ss:Underline="Single"/><NumberFormat ss:Format="Currency"/></Style><Style ss:ID="Heading" ss:Name="Heading"><Font ss:Bold="1" ss:Italic="1" ss:Size="16"/></Style><Style ss:ID="Heading1" ss:Name="Heading1"><Font ss:Bold="1" ss:Italic="1" ss:Size="16"/></Style><Style ss:ID="co1"/><Style ss:ID="co2"/><Style ss:ID="co3"/><Style ss:ID="co4"/><Style ss:ID="co5"/><Style ss:ID="co6"/><Style ss:ID="co7"/><Style ss:ID="co8"/><Style ss:ID="ta1"/><Style ss:ID="ce1"><Interior ss:Color="#ffff99" ss:Pattern="Solid"/></Style><Style ss:ID="ce2"><Interior ss:Color="#ff3333" ss:Pattern="Solid"/></Style><Style ss:ID="ce3"><Interior ss:Color="#99ff66" ss:Pattern="Solid"/></Style></Styles><ss:Worksheet ss:Name="Sheet1"><Table ss:StyleID="ta1"><Column ss:Width="246.4992"/><Column ss:Width="242.5896"/><Column ss:Width="287.4024"/><Column ss:Width="143.0352"/><Column ss:Width="136.8576"/><Column ss:Width="137.6496"/><Column ss:Width="173.9088"/><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell ss:StyleID="ce1"><Data ss:Type="String">PrefixGenerator (Weight: 60%)</Data></Cell><Cell ss:StyleID="Default"/><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell><Data ss:Type="String">trainPrefixMap(StringArrayMap map, String fileName)</Data></Cell><Cell ss:StyleID="Default"/><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell ss:Index="2" ss:StyleID="Default"/><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell ss:StyleID="ce1"><Data ss:Type="String">Prefix (Weight: 10%)</Data></Cell><Cell ss:StyleID="Default"/><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="23.8392"><Cell><Data ss:Type="String">initializeSentenceStartArray()</Data></Cell><Cell ss:StyleID="ce2"><Data ss:Type="String">Test via GetStartOfSentenceStartPrefixes()</Data></Cell><Cell><Data ss:Type="String">←--Still have erratic behavior. MotionTo remove this test case.</Data></Cell><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="35.0352"><Cell><Data ss:Type="String">getStartOfSentencePrefixes()</Data></Cell><Cell><Data ss:Type="String">check if hardcoded array is equal 
to returned array (covered in 
TestInitializeSentenceStartArray)</Data></Cell><Cell ss:StyleID="ce3"><Data ss:Type="String">check if the returned array is null</Data></Cell><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="23.8392"><Cell><Data ss:Type="String">Prefix(String [] prefixStrings)</Data></Cell><Cell><Data ss:Type="String">Checks to make sure the prefix array is setCorrectly</Data></Cell><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell><Data ss:Type="String">getNumSuffixes()</Data></Cell><Cell><Data ss:Type="String">Test via addSuffix</Data></Cell><Cell ss:StyleID="ce3"><Data ss:Type="String">check if initial # of suffixes is 0</Data></Cell><Cell ss:Index="7"/></Row><Row ss:Height="23.8392"><Cell><Data ss:Type="String">getNumPrefixes()</Data></Cell><Cell><Data ss:Type="String">Check array length after constructor
Is called with different input</Data></Cell><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="23.8392"><Cell><Data ss:Type="String">getPrefixString(int index)</Data></Cell><Cell><Data ss:Type="String">Test if prefix returned at index, “index”
Matches our hard coded String</Data></Cell><Cell ss:Index="7"/></Row><Row ss:Index="11" ss:AutoFitHeight="0" ss:Height="12.816"><Cell><Data ss:Type="String">addSuffix(String str)</Data></Cell><Cell><Data ss:Type="String">Test via getNumSuffixes()</Data></Cell><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell><Data ss:Type="String">String getRandomSuffix()</Data></Cell><Cell><Data ss:Type="String">Test via getSuffixString()</Data></Cell><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell><Data ss:Type="String">equals(Object obj)</Data></Cell><Cell><Data ss:Type="String">Test boolean value of same object</Data></Cell><Cell ss:StyleID="ce3"><Data ss:Type="String">Test boolean value of different object</Data></Cell><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell><Data ss:Type="String">toString()</Data></Cell><Cell><Data ss:Type="String">String comparison with our hardcoded prefixes</Data></Cell><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell><Data ss:Type="String">getSuffixString(int index)</Data></Cell><Cell><Data ss:Type="String">Test if suffix returned at index matches ours</Data></Cell><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell ss:Index="2" ss:StyleID="Default"/><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell ss:StyleID="ce1"><Data ss:Type="String">TextGenerationEngine (Weight: 30%)</Data></Cell><Cell ss:StyleID="Default"/><Cell ss:Index="7"/></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell><Data ss:Type="String">shouldTerminate(String suffix)</Data></Cell><Cell><Data ss:Type="String">Look for terminating character at end of sent</Data></Cell><Cell ss:StyleID="ce3"><Data ss:Type="String">Has terminating char in beginning/middle (fail)</Data></Cell><Cell ss:StyleID="ce3"><Data ss:Type="String">No terminating character at all</Data></Cell><Cell ss:StyleID="ce3"><Data ss:Type="String">Punc before terminator (true)</Data></Cell><Cell ss:StyleID="ce3"><Data ss:Type="String">Punc w/out terminator (false)</Data></Cell><Cell ss:StyleID="ce3"><Data ss:Type="String">Punc as non-fina char (ie. It's) (false)</Data></Cell></Row><Row ss:AutoFitHeight="0" ss:Height="12.816"><Cell><Data ss:Type="String">generateSentence()</Data></Cell><Cell ss:StyleID="Default"><Data ss:Type="String">Test for formatting the output</Data></Cell><Cell><Data ss:Type="String">Validity check (given prefix, is next word valid suffix)</Data></Cell><Cell ss:Index="7"/></Row><Row ss:Height="35.0352"><Cell><Data ss:Type="String">reTraining (*name is subject to change)</Data></Cell><Cell ss:StyleID="Default"><Data ss:Type="String">Change start of sentence prefix</Data></Cell><Cell><Data ss:Type="String">Goes through all keys in hashmap and prefix length is
same as specified and checks if their length is the same
As preset length</Data></Cell><Cell><Data ss:Type="String">Comparison to length</Data></Cell><Cell ss:Index="7"/></Row></Table><x:WorksheetOptions/></ss:Worksheet></Workbook>